@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model List<Sertifikasi.Model.DetailSertiModel>
@{
    ViewData["Title"] = "Dashboard";
    int no = 1;
}

<style>
    .card {
        box-shadow: 0 4px 14px rgba(0, 0, 0, 0.1); /* Menambahkan bayangan pada card */
        transition: box-shadow 0.3s ease-in-out; /* Efek transisi saat hover */

        /* Menambahkan padding agar card tidak menyentuh tepi layar */
        padding: 10px; 
        margin: 10px;
        margin-bottom: 20px;
        border-radius: 10px;
    }

    .scrollstyle {
        overflow-y: auto; /* Tambahkan pengguliran vertikal jika kontennya melebihi tinggi maksimal */
    }
</style>
<br />
<br>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header text-center">
                <h2>Laporan Sertifikasi Mahasiswa Politeknik Astra</h2>
            </div>
            <br>
            <br>
            <div class="card-body">
                <div class="col-md-5 col-sm-12">
                    <h4>Grafik Keseluruhan Sertifikasi</h4>
                </div>
            </div>
            <br />
            <div class="card-body scrollstyle">
                <div class="col-md-5 col-sm-12">
                    <div class="row">
                        <div class="col">
                            <select class="form-control" id="filter-year" style="border-radius: 10px;">
                                <option value="">Pilih Tahun</option>
                                @for (int i = 0; i < 5; i++)
                                {
                                    <option value="@(DateTime.Now.Year - i)">@(DateTime.Now.Year - i)</option>
                                }
                            </select>
                        </div>

                        <div class="col">
                            <select class="form-control" id="idprodi" style="border-radius: 10px;">
                                <option value="">Pilih Program Studi</option>
                            </select>
                        </div>

                        <div class="col">
                            <select class="form-control" id="filter-sertifikasi" style="border-radius: 10px;">
                                <option value="">Pilih Sertifikasi</option>
                            </select>
                        </div>

                    </div>
                </div>
                <div class="col-12">
                    <div class="chart-container">
                        <canvas id="myChart" width="200" height="60"></canvas>
                    </div>
                </div>
                <br />
                <br />

                <div class="col-12">
                    <table class="table table-hover table-bordered table-condensed table-striped mx-auto text-center scrollstyle">
                        <thead>
                            <tr>
                                <th scope="col" style="text-align: center;">No.</th>
                                <th scope="col" style="text-align: center;">Nama Prodi</th>
                                <th scope="col" style="text-align: center;">Nama Sertifikasi</th>
                                <th scope="col" style="text-align: center;">Tanggal Sertifikasi</th>
                                <th scope="col" style="text-align: center;">Lembaga</th>
                                <th scope="col" style="text-align: center;">Level Sertifikasi</th>
                                <th scope="col" style="text-align: center;">Status</th>
                                <th scope="col" style="text-align: center;">Bukti Pendukung</th>
                                <th scope="col" style="text-align: center;">Aksi</th>
                            </tr>
                        </thead>
                        <tbody id="tbody">
                        </tbody>
                    </table>
                </div>

                <div class="modal fade" id="modal-detail">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <!-- Modal Header -->
                            <div class="modal-header">
                                <h5 class="modal-title">Detail Data Sertifikasi </h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>

                            <!-- Modal Body -->
                            <div class="modal-body table-responsive">
                                <table class="table table-bordered no-margin">
                                    <tbody>

                                        <tr>
                                            <th>Peserta Kompeten</th>
                                            <td><span id="modal-detail-kom"></span></td>
                                        </tr>
                                        <tr>
                                            <th>Peserta Tidak Kompeten</th>
                                            <td><span id="modal-detail-tkom"></span></td>
                                        </tr>
                                        <tr>
                                            <th>Peserta Tidak Hadir</th>
                                            <td><span id="modal-detail-tdkh"></span></td>
                                        </tr>
                                        <tr>
                                            <th>Total Peserta</th>
                                            <td><span id="modal-detail-jmlh"></span></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

<script>
    loadTable();

    function downloadPdf(pdfUrl) {
        // Buka jendela baru untuk mengunduh PDF
        window.open(pdfUrl, '_blank');
    }

    function downloadBuktiPendukung(fileName) {
        var apiUrl = "https://localhost:44303/DownloadPdf"; // Sesuaikan dengan URL API Anda
        var pdfUrl = apiUrl + "?fileName=" + fileName;

        // Panggil fungsi downloadPdf untuk mengunduh PDF
        downloadPdf(pdfUrl);
    }

    function loadTable() {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllSertifikasi";
        var method = "GET";
        var PdfPath = "https://localhost:44303/Content/Uploads/";

        $.ajax({
            url: url,
            method: method,
            contentType: "application/json",
            success: function (data) {
                var list = data.data;
                var rowNumber = 1;

                list.forEach(function (item) {
                    var options = { year: 'numeric', month: 'long', day: 'numeric' };
                    var formatter = new Intl.DateTimeFormat('id-ID', options);
                    var formattedTanggal = formatter.format(new Date(item.tanggal));

                    var newRow = '<tr>' +
                        '<td>' + rowNumber++ + '</td>' +
                        '<td>' + item.namaProdi + '</td>' +
                        '<td>' + item.namaSerti + '</td>' +
                        '<td>' + formattedTanggal + '</td>' +
                        '<td>' + item.lembaga + '</td>' +
                        '<td>' + item.level + '</td>' +
                        '<td>' + item.status + '</td>' +
                        '<td><a href="#" class="btn btn-primary btn-download" onclick="downloadBuktiPendukung(\'' + item.buktipendukung + '\')"><i class="fa fa-download"></i> &nbsp;Download bukti pendukung</a></td>' +

                        '<td>' +
                        '<a href="" id="detail-' + item.idsertifikat + '" class="btn btn-sm detail-button "' +
                        'data-toggle="modal" data-target="#modal-detail" data-kom="' + item.kompeten + '"' +
                        'data-tkom="' + item.tidakkompeten + '"' +
                        'data-tdkh="' + item.tidakhadir + '"' +
                        'data-jmlh="' + item.jumlah + '"> <i class="fas fa-list" aria-hidden="true"></i></a>' +
                        '<span style="margin-right: 10px;"></span>' +
                        '</td>' +
                        '</tr>';
                    $('#tbody').append(newRow);
                });
            }
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        // Menggunakan SweetAlert untuk konfirmasi penghapusan
        document.querySelectorAll('.detail-button').forEach(button => {
            button.addEventListener('click', function () {
                const kompeten = this.getAttribute('data-kom');
                const tkompten = this.getAttribute('data-tkom');
                const tidakhadir = this.getAttribute('data-tdkh');
                const jumlah = this.getAttribute('data-jmlh');

                // Mengisi data modal dengan detail yang sesuai
                document.getElementById('modal-detail-kom').innerText = kompeten;
                document.getElementById('modal-detail-tkom').innerText = tkompten;
                document.getElementById('modal-detail-tdkh').innerText = tidakhadir;
                document.getElementById('modal-detail-jmlh').innerText = jumlah;

                // Menampilkan modal
                $('#modal-detail-').modal('show');
            });
        });
    });
</script>

<script>
    loadProdi()
    function loadProdi() {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllProdi";
        var method = "GET";

        $.ajax({
            url: url,
            method: method,
            contentType: "application/json",
            success: function (data) {
                var list = data.data;
                list.forEach(function (item) {
                    var newOption = '<option value="' + item.idProdi + '">' + item.namaProdi + "</option>";
                    $("#idprodi").append(newOption);
                });
            },
        });
    }

    $(document).ready(function() {
        loadFilterKeseluruhan();
        loadGrafikkeseluruhan();
    });


    $(document).ready(function() {
        // Attach an event listener to the dropdown
        $('#filter-year').change(function () {
            // Get the selected year
            const years = $(this).val();
            var idProdi = document.getElementById('idprodi').value;

            // Call the function to load data based on the selected year
            if (years === "" && idProdi === "") {
                // Call the function to load data for all years
                loadFilterKeseluruhan();
                loadGrafikkeseluruhan();
            } else if (years === "" && idProdi !== "") {
                // Call the function to load data based on the selected year
                loadFilterByProdi(idProdi);
                loadGrafikByProdi(idProdi);
            } else if (years !== "" && idProdi == "") {
                loadGrafikByYear(years);
            } else {
                loadFilterByProdiAndYear(idProdi, years);
                loadGrafikByProdiAndYears(idProdi, years);
                //loadGrafikpilihserti(idProdi, years);
            }
        });
    });

    $(document).ready(function () {
    // Attach an event listener to the dropdown
        $('#idprodi').change(function () {
            // Get the selected year
            const idProdi = $(this).val();
            var years = document.getElementById('filter-year').value;
            // Call the function to load data based on the selected 
            if (years === "" && idProdi === "") {
                // Call the function to load data for all years
                loadFilterKeseluruhan();
                loadGrafikkeseluruhan();
            } else if (years === "" && idProdi !== "") {
                // Call the function to load data based on the selected year
                loadFilterByProdi(idProdi);
                loadGrafikByProdi(idProdi);
            } else if (years !== "" && idProdi == "") {
                loadFilterByYear(years);
                loadGrafikByYear(years);
            } else {
                loadFilterByProdiAndYear(idProdi,years);
                loadGrafikByProdiAndYears(idProdi,years);
                //loadGrafikpilihserti(idProdi, years);
            }
        
        });
    });

    $(document).ready(function () {
        // Attach an event listener to the dropdown
        $('#filter-sertifikasi').change(function () {
            // Get the selected year
            const id_sertifikasi = $(this).val();
            var years = document.getElementById('filter-year').value;
            var idProdi = document.getElementById('idprodi').value;

            if (id_sertifikasi !== "") {
                loadGrafikBySertif(id_sertifikasi);
            } else if (years === "" && idProdi === "" && id_sertifikasi == "") {
                // Call the function to load data for all years
                loadGrafikkeseluruhan();
            } else if (years === "" && idProdi !== "" && id_sertifikasi == "") {
                // Call the function to load data based on the selected year
                loadGrafikByProdi(idProdi);
            } else if (years !== "" && idProdi == "" && id_sertifikasi == "") {
                loadGrafikByYear(years);
            } else {
                loadGrafikByProdiAndYears(idProdi, years);
                //loadGrafikpilihserti(idProdi, years);
            }

        });
    });
</script>

<script>
    
    var chart;

    document.addEventListener('DOMContentLoaded', function () {
        const ctx = document.getElementById('myChart').getContext('2d');
        const options = {
            responsive: true,
            maintainAspectRatio: true,
            scales: {
                x: {
                    beginAtZero: true
                },
                y: {
                    beginAtZero: true,
                    suggestedMax: 50,
                    title: {
                        display: true,
                        text: "Jumlah Sertifikasi",
                        font: {
                            size: 18
                        },
                        position: 'center'
                    }
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: 'top'
                },
                datalabels: {
                    align: 'center',
                    anchor: 'center',
                    color: 'black',
                    font: {
                        weight: 'bold'
                    },
                    formatter: function (value, context) {
                        return value; // Menampilkan nilai data di tengah bar
                    }
                }
            }
        };

        chart = new Chart(ctx, {
            type: 'bar',
            data: {
                datasets: [{}, {}],
                labels: []
            },
            options: options
        });

        function updateChartSize() {
            chart.resize();
        }

        // Update chart size when the window is resized
        window.addEventListener('resize', function () {
            updateChartSize();
        });

        // Initial call to set up the chart size
        updateChartSize();
    });

    function loadGrafikkeseluruhan() {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

        $.ajax({
            url: url,
            type: "GET",
            dataType: 'json',
            success: function (data) {
                console.log("Data received:", data);
                var dataSerti = data.data;

                var namaProdi = [];
                var kompeten = [];
                var tidakkompeten = [];
                var tidakhadir = [];

                var i = 0;
                dataSerti.forEach(function(item) {
                    namaProdi[i] = item.namaProdi;
                    kompeten[i] = item.kompeten;
                    tidakkompeten[i] = item.tidakkompeten;
                    tidakhadir[i] = item.tidakhadir;
                    i++;
                });
                // Clear existing datasets
                chart.data.datasets = [];

                // Add bar datasets
                chart.data.datasets.push({
                    label: 'Kompeten (Bar)',
                    type: 'bar',
                    data: kompeten,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgb(54, 162, 235)',
                    borderWidth: 1,
                    order: 2 // specify the order for this dataset
                });

                chart.data.datasets.push({
                    label: 'TidakKompeten',
                    type: 'bar',
                    data: tidakkompeten,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)', 
                    borderColor: 'rgb(255, 99, 132)', 
                    borderWidth: 1,
                    order: 2 // specify the order for this dataset
                });

                chart.data.datasets.push({
                    label: 'TidakHadir',
                    type: 'bar',
                    data: tidakhadir,
                    backgroundColor: 'rgba(255, 159, 64, 0.2)',
                    borderColor: 'rgb(255, 159, 64)',
                    borderWidth: 1,
                    order: 2 // specify the order for this dataset
                });


                // Update x-axis categories
                chart.data.labels = namaProdi;

                // Update the chart
                chart.update();
            },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadGrafikByYear(selectedYear) {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

        $.ajax({
            url: url,
            type: "GET",
            dataType: 'json',
            success: function (data) {
                    var dataSerti = data.data;

                    var namaProdi = [];
                    var kompeten = [];
                    var tidakkompeten = [];
                    var tidakhadir = [];

                    var i = 0;
                    dataSerti.forEach(function(item) {
                        if (item.tahunSertifikasi == selectedYear) {
                            namaProdi[i] = item.namaProdi;
                            kompeten[i] = item.kompeten;
                            tidakkompeten[i] = item.tidakkompeten;
                            tidakhadir[i] = item.tidakhadir;
                            i++;
                        }
                    });
                console.log(dataSerti);
                console.log(kompeten);
                    // Clear existing datasets
                    chart.data.datasets = [];

                    // Add bar datasets
                    chart.data.datasets.push({
                        label: 'Kompeten (Bar)',
                        type: 'bar',
                        data: kompeten,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgb(54, 162, 235)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakKompeten',
                        type: 'bar',
                        data: tidakkompeten,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgb(255, 99, 132)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakHadir',
                        type: 'bar',
                        data: tidakhadir,
                    backgroundColor: 'rgba(255, 159, 64, 0.2)',
                    borderColor: 'rgb(255, 159, 64)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    // Update x-axis categories
                    chart.data.labels = namaProdi;

                    // Update the chart
                    chart.update();
                },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadGrafikByProdi(idProdi) {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

            $.ajax({
                url: url,
                type: "GET",
                dataType: 'json',
                // data: { year: selectedYear },
                success: function (data) {
                console.log(idProdi);

                   var dataSerti = data.data;

                    var namaSerti = [];
                    var kompeten = [];
                    var tidakkompeten = [];
                    var tidakhadir = [];

                    var i = 0;
                    dataSerti.forEach(function(item) {
                        if (item.idProdi == idProdi) {
                            namaSerti[i] = item.namaSertifikasi;
                            kompeten[i] = item.kompeten;
                            tidakkompeten[i] = item.tidakkompeten;
                            tidakhadir[i] = item.tidakhadir;
                            i++;
                        }
                    });
                    // Clear existing datasets
                    chart.data.datasets = [];

                    // Add bar datasets
                    chart.data.datasets.push({
                        label: 'Kompeten (Bar)',
                        type: 'bar',
                        data: kompeten,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgb(54, 162, 235)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakKompeten',
                        type: 'bar',
                        data: tidakkompeten,
                        backgroundColor: 'rgba(255, 159, 64, 0.2)',
                        borderColor: 'rgb(255, 159, 64)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakHadir',
                        type: 'bar',
                        data: tidakhadir,
                        backgroundColor: 'rgba(255, 205, 86, 0.2)',
                        borderColor: 'rgb(255, 205, 86)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    // Update x-axis categories
                    chart.data.labels = namaSerti;

                    // Update the chart
                    chart.update();
                },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadGrafikByProdiAndYears(idProdi, years) {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

            $.ajax({
                url: url,
                type: "GET",
                dataType: 'json',
                // data: { year: selectedYear },
                success: function (data) {
                console.log(idProdi);

                   var dataSerti = data.data;

                    var namaSerti = [];
                    var kompeten = [];
                    var tidakkompeten = [];
                    var tidakhadir = [];

                    var i = 0;
                    dataSerti.forEach(function(item) {
                        if (item.idProdi == idProdi && item.tahunSertifikasi == years) {
                            namaSerti[i] = item.namaSertifikasi;
                            kompeten[i] = item.kompeten;
                            tidakkompeten[i] = item.tidakkompeten;
                            tidakhadir[i] = item.tidakhadir;
                            i++;
                        }
                    });
                    // Clear existing datasets
                    chart.data.datasets = [];

                    // Add bar datasets
                    chart.data.datasets.push({
                        label: 'Kompeten (Bar)',
                        type: 'bar',
                        data: kompeten,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgb(54, 162, 235)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakKompeten',
                        type: 'bar',
                        data: tidakkompeten,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgb(255, 99, 132)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakHadir',
                        type: 'bar',
                        data: tidakhadir,
                        backgroundColor: 'rgba(255, 205, 86, 0.2)',
                        borderColor: 'rgb(255, 205, 86)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    // Update x-axis categories
                    chart.data.labels = namaSerti;

                    // Update the chart
                    chart.update();
                },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadGrafikBySertif(idSertif) {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

            $.ajax({
                url: url,
                type: "GET",
                dataType: 'json',
                // data: { year: selectedYear },
                success: function (data) {

                    var dataSerti = data.data;

                    var namaSerti = [];
                    var kompeten = [];
                    var tidakkompeten = [];
                    var tidakhadir = [];

                    var i = 0;
                    dataSerti.forEach(function(item) {
                        if (item.idSertifikasi == idSertif) {
                            namaSerti[i] = item.namaSertifikasi;
                            kompeten[i] = item.kompeten;
                            tidakkompeten[i] = item.tidakkompeten;
                            tidakhadir[i] = item.tidakhadir;
                            i++;
                        }
                    });
                    // Clear existing datasets
                    chart.data.datasets = [];

                    // Add bar datasets
                    chart.data.datasets.push({
                        label: 'Kompeten (Bar)',
                        type: 'bar',
                        data: kompeten,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgb(54, 162, 235)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakKompeten',
                        type: 'bar',
                        data: tidakkompeten,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgb(255, 99, 132)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakHadir',
                        type: 'bar',
                        data: tidakhadir,
                        backgroundColor: 'rgba(255, 205, 86, 0.2)',
                        borderColor: 'rgb(255, 205, 86)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    // Update x-axis categories
                    chart.data.labels = namaSerti;

                    // Update the chart
                    chart.update();
                },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadFilterKeseluruhan() {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

        $.ajax({
            url: url,
            type: "GET",
            dataType: 'json',
            // data: { year: selectedYear },
            success: function (data) {

                var dataSertif = data.data;
                // Assuming data is directly used instead of newDataArray or dataSerti
                console.log(dataSertif);
                $('#filter-sertifikasi').empty();
                $('#filter-sertifikasi').append("<option value=''>Pilih Sertifikasi</option>");

                dataSertif.forEach(function (item){
                    var newOption = "<option value='" + item.idSertifikasi + "'>" + item.namaSertifikasi + "</option>";
                    $('#filter-sertifikasi').append(newOption);
                });
            },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadFilterByYear(years) {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

        $.ajax({
            url: url,
            type: "GET",
            dataType: 'json',
            // data: { year: selectedYear },
            success: function (data) {

                var dataSertif = data.data;
                // Assuming data is directly used instead of newDataArray or dataSerti
                console.log(dataSertif);
                $('#filter-sertifikasi').empty();
                $('#filter-sertifikasi').append("<option value=''>Pilih Sertifikasi</option>");

                dataSertif.forEach(function (item){
                    if (item.tahunSertifikasi == years) {
                        var newOption = "<option value='" + item.idSertifikasi + "'>" + item.namaSertifikasi + "</option>";
                        $('#filter-sertifikasi').append(newOption);
                    }
                });
            },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadFilterByProdi(idProdi) {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

        $.ajax({
            url: url,
            type: "GET",
            dataType: 'json',
            // data: { year: selectedYear },
            success: function (data) {

                var dataSertif = data.data;
                // Assuming data is directly used instead of newDataArray or dataSerti
                console.log(dataSertif);
                $('#filter-sertifikasi').empty();
                $('#filter-sertifikasi').append("<option value=''>Pilih Sertifikasi</option>");

                dataSertif.forEach(function (item){
                    if (item.idProdi == idProdi) {
                        var newOption = "<option value='" + item.idSertifikasi + "'>" + item.namaSertifikasi + "</option>";
                        $('#filter-sertifikasi').append(newOption);
                    }
                });
            },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadFilterByProdiAndYear(idProdi, years) {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

        $.ajax({
            url: url,
            type: "GET",
            dataType: 'json',
            // data: { year: selectedYear },
            success: function (data) {

                var dataSertif = data.data;
                // Assuming data is directly used instead of newDataArray or dataSerti
                console.log(dataSertif);
                $('#filter-sertifikasi').empty();
                $('#filter-sertifikasi').append("<option value=''>Pilih Sertifikasi</option>");

                dataSertif.forEach(function (item){
                    if (item.idProdi == idProdi && item.tahunSertifikasi == years) {
                        var newOption = "<option value='" + item.idSertifikasi + "'>" + item.namaSertifikasi + "</option>";
                        $('#filter-sertifikasi').append(newOption);
                    }
                });
            },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

</script>

<style>
    .apexcharts-toolbar {
        display: none !important;
    }

    #chart-container {
        width: 100%;
        max-width: 100%;
        overflow: hidden;
    }
</style>