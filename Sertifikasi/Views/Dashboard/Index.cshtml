@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model List<Sertifikasi.Model.DetailSertiModel>
@{
    ViewData["Title"] = "Dashboard";
    int no = 1;
}


<br />
<br>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h3>Grafik Keseluruhan Sertifikasi</h3>
            </div>
            <br />
            <div class="card-body">
                <div class="col-md-5 col-sm-12">
                    <div class="row">
                        <div class="col">
                            <select class="form-control" id="filter-year" style="border-radius: 10px;">
                                <option value="">Pilih Tahun</option>
                                @for (int i = 0; i < 5; i++)
                                {
                                    <option value="@(DateTime.Now.Year - i)">@(DateTime.Now.Year - i)</option>
                                }
                            </select>
                        </div>

                        <div class="col">
                            <select class="form-control" id="idprodi" style="border-radius: 10px;">
                            <option value="">Pilih Program Studi</option>
                            </select>
                        </div>
                    
                        <div class="col">
                            <select class="form-control" id="filter-sertifikasi" style="border-radius: 10px;">
                                <option value="">Pilih Sertifikasi</option>
                            </select>
                        </div>
                        
                    </div>
                </div>
                <div class="col-12">
                    <div class="chart-container">
                        <canvas id="myChart" width="200" height="60"></canvas>
                    </div>                
                </div>

            </div>
        </div>
    </div>
</div>

@*<div id="chart"></div>

<div class="row">
    <div class="col-lg-12">
        <br />

        <div class="card-body">
            <br />
            <br />
            <table id="mytable" class="table table-striped table-hover table-bordered table-condensed table-striped mx-auto text-center">
                <thead>
                    <tr>
                        <th scope="col" style="text-align: center;">No.</th>
                        <th scope="col" style="text-align: center;">Nama Prodi</th>
                        <th scope="col" style="text-align: center;">Jumlah Sertifikasi</th>
                        <th scope="col" style="text-align: center;">Jumlah Kompeten</th>
                        <th scope="col" style="text-align: center;">Jumlah Tidak Kompeten</th>
                    </tr>
                </thead>
                <tbody id="tbody">
                    @foreach (var detail in Model)
                    {
                        <tr>
                            <td>@(no++)</td>
                            <td>@detail.namaProdi</td>
                            <td>@detail.jumlahserti</td>
                            <td>@detail.jumlahKompeten</td>
                            <td>@detail.jumlahtidakKom</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>*@

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<script>
    loadProdi()
    function loadProdi() {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllProdi";
        var method = "GET";

        $.ajax({
            url: url,
            method: method,
            contentType: "application/json",
            success: function (data) {
                var list = data.data;
                list.forEach(function (item) {
                    var newOption = '<option value="' + item.idProdi + '">' + item.namaProdi + "</option>";
                    $("#idprodi").append(newOption);
                });
            },
        });
    }

    $(document).ready(function() {
        loadGrafikkeseluruhan();
    });


    $(document).ready(function() {
        // Attach an event listener to the dropdown
        $('#filter-year').change(function () {
            // Get the selected year
            const selectedYear = $(this).val();
            var years = document.getElementById('filter-year').value;
            var idProdi = document.getElementById('idprodi').value;

            // Call the function to load data based on the selected year
            if (selectedYear === "") {
                // Call the function to load data for all years
                loadGrafikkeseluruhan();
            } else if (selectedYear !== "" && idProdi == "") {
                // Call the function to load data based on the selected year
                loadGrafikByProdi(idProdi)
            } else if (selectedYear == "" && idProdi == "") {
                loadGrafikByYear(selectedYear);
                //loadGrafikserti(sertifikasi);
                //loadGrafikpilihserti(sertifikasi,years);
            }
        });
    });

    $(document).ready(function () {
    // Attach an event listener to the dropdown
        $('#idprodi').change(function () {
            // Get the selected year
            const idProdi = $(this).val();
            var years = document.getElementById('filter-year').value;
            // Call the function to load data based on the selected 
            if (years === "" && idProdi === "") {
                // Call the function to load data for all years
                loadGrafikkeseluruhan();
            } else if (years == "" && idProdi !== "") {
                // Call the function to load data based on the selected year
                loadGrafikByProdi(idProdi)
            } else if (years !== "" && idProdi == "") {
                loadGrafikByYear(years)
            } else if (years !== "" && idProdi !== "") {
                loadGrafikByYear(years)
                loadGrafikByProdi(idProdi)
                //loadGrafikserti(idProdi);
                //loadGrafikpilihserti(idProdi, years);
            }
        
        });
    });

    $(document).ready(function () {
        // Attach an event listener to the dropdown
        $('#filter-sertifikasi').change(function () {
            // Get the selected year
            const id_sertifikasi = $(this).val();

            if (id_sertifikasi === "") {
                loadGrafikkeseluruhan();
            } else {
                loadGrafiksertifikasi(id_sertifikasi);
            }

        });
    });
</script>
<script>
    
    var chart;

    document.addEventListener('DOMContentLoaded', function () {
        const ctx = document.getElementById('myChart').getContext('2d');
        const options = {
            responsive: true,
            maintainAspectRatio: true,
            scales: {
                x: {
                    beginAtZero: true
                },
                y: {
                    beginAtZero: true
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: 'top'
                }
            }
            // Add more options as needed
        };

        chart = new Chart(ctx, {
            type: 'bar',
            data: {
                datasets: [{}, {}],
                labels: []
            },
            options: options
        });
    });



    function loadGrafikkeseluruhan() {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

        $.ajax({
            url: url,
            type: "GET",
            dataType: 'json',
            success: function (data) {
                console.log("Data received:", data);
                var dataSerti = data.data;

                var namaProdi = [];
                var kompeten = [];
                var tidakkompeten = [];
                var tidakhadir = [];

                var i = 0;
                dataSerti.forEach(function(item) {
                    namaProdi[i] = item.namaProdi;
                    kompeten[i] = item.kompeten;
                    tidakkompeten[i] = item.tidakkompeten;
                    tidakhadir[i] = item.tidakhadir;
                    i++;
                });
                // Clear existing datasets
                chart.data.datasets = [];

                // Add bar datasets
                chart.data.datasets.push({
                    label: 'Kompeten (Bar)',
                    type: 'bar',
                    data: kompeten,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgb(54, 162, 235)',
                    borderWidth: 1,
                    order: 2 // specify the order for this dataset
                });

                chart.data.datasets.push({
                    label: 'TidakKompeten',
                    type: 'bar',
                    data: tidakkompeten,
                    backgroundColor: 'rgba(255, 159, 64, 0.2)',
                    borderColor: 'rgb(255, 159, 64)',
                    borderWidth: 1,
                    order: 2 // specify the order for this dataset
                });

                chart.data.datasets.push({
                    label: 'TidakHadir',
                    type: 'bar',
                    data: tidakhadir,
                    backgroundColor: 'rgba(255, 205, 86, 0.2)',
                    borderColor: 'rgb(255, 205, 86)',
                    borderWidth: 1,
                    order: 2 // specify the order for this dataset
                });


                // Update x-axis categories
                chart.data.labels = namaProdi;

                // Update the chart
                chart.update();
            },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadGrafikByYear(selectedYear) {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

        $.ajax({
            url: url,
            type: "GET",
            dataType: 'json',
            success: function (data) {
                console.log(selectedYear);
                console.log(data);
                    var dataSerti = data.data;

                    var namaProdi = [];
                    var kompeten = [];
                    var tidakkompeten = [];
                    var tidakhadir = [];

                    var i = 0;
                    dataSerti.forEach(function(item) {
                        if (item.tahunSertifikasi == selectedYear) {
                            namaProdi[i] = item.namaProdi;
                            kompeten[i] = item.kompeten;
                            tidakkompeten[i] = item.tidakkompeten;
                            tidakhadir[i] = item.tidakhadir;
                            i++;
                        }
                    });
                console.log(dataSerti);
                console.log(kompeten);
                    // Clear existing datasets
                    chart.data.datasets = [];

                    // Add bar datasets
                    chart.data.datasets.push({
                        label: 'Kompeten (Bar)',
                        type: 'bar',
                        data: kompeten,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgb(54, 162, 235)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakKompeten',
                        type: 'bar',
                        data: tidakkompeten,
                        backgroundColor: 'rgba(255, 159, 64, 0.2)',
                        borderColor: 'rgb(255, 159, 64)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakHadir',
                        type: 'bar',
                        data: tidakhadir,
                        backgroundColor: 'rgba(255, 205, 86, 0.2)',
                        borderColor: 'rgb(255, 205, 86)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    // Update x-axis categories
                    chart.data.labels = namaProdi;

                    // Update the chart
                    chart.update();
                },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadGrafikByProdi(idProdi) {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllData";

            $.ajax({
                url: url,
                type: "GET",
                dataType: 'json',
                // data: { year: selectedYear },
                success: function (data) {
                console.log(idProdi);

                   var dataSerti = data.data;

                    var namaSerti = [];
                    var kompeten = [];
                    var tidakkompeten = [];
                    var tidakhadir = [];

                    var i = 0;
                    dataSerti.forEach(function(item) {
                        if (item.idProdi == idProdi) {
                            namaSerti[i] = item.namaSertifikasi;
                            kompeten[i] = item.kompeten;
                            tidakkompeten[i] = item.tidakkompeten;
                            tidakhadir[i] = item.tidakhadir;
                            i++;
                        }
                    });
                    // Clear existing datasets
                    chart.data.datasets = [];

                    // Add bar datasets
                    chart.data.datasets.push({
                        label: 'Kompeten (Bar)',
                        type: 'bar',
                        data: kompeten,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgb(54, 162, 235)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakKompeten',
                        type: 'bar',
                        data: tidakkompeten,
                        backgroundColor: 'rgba(255, 159, 64, 0.2)',
                        borderColor: 'rgb(255, 159, 64)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    chart.data.datasets.push({
                        label: 'TidakHadir',
                        type: 'bar',
                        data: tidakhadir,
                        backgroundColor: 'rgba(255, 205, 86, 0.2)',
                        borderColor: 'rgb(255, 205, 86)',
                        borderWidth: 1,
                        order: 2 // specify the order for this dataset
                    });

                    // Update x-axis categories
                    chart.data.labels = namaSerti;

                    // Update the chart
                    chart.update();
                },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

    function loadFilterByProdiAndYear(id_prodi, years) {
        console.log(id_prodi, years);
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAll";

        $.ajax({
            url: url,
            type: "GET",
            dataType: 'json',
            // data: { year: selectedYear },
            success: function (data) {
                console.log(id_prodi, years);

                var dataSertif = data.data;
                // Assuming data is directly used instead of newDataArray or dataSerti
                console.log(dataSertif);
                $('#filter-sertifikasi').empty();
                $('#filter-sertifikasi').append("<option value=''>Pilih Sertifikasi</option>");

                dataSertif.forEach(function (item){
                        var id_sertifikasi = dataSertif[i].idSertifikasi;
                        var nama_sertifikasi = dataSertif[i].namaSertifikasi;

                        var newOption = "<option value='" + id_sertifikasi + "'>" + nama_sertifikasi + "</option>";
                        $('#filter-sertifikasi').append(newOption);
                });
            },

            // Handle errors in the AJAX request
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                swal.fire("Error!", "Terjadi kesalahan saat mengambil data pemakaian!", "error");
            }
        });
    }

</script>

<style>
    .apexcharts-toolbar {
        display: none !important;
    }

    #chart-container {
        width: 100%;
        max-width: 100%;
        overflow: hidden;
    }
</style>