@{
    ViewData["Title"] = "Pengguna";
}

<!-- Sertakan jQuery -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<!-- Sertakan SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<div class="row">
    <div class="col-lg-12">
        <br />

        <div class="card-body">

            <a asp-controller="Pengguna" class="btn btn-primary" asp-action="TambahPengguna" title="Tambah Pengguna"><i class="fa fa-plus"></i>&nbsp;Tambah Pengguna</a>
            <br />
            <br />
            <table class="table table-hover table-bordered table-condensed table-striped mx-auto text-center">
                <thead>
                    <tr>
                        <th scope="col" style="text-align: center;">No.</th>
                        <th scope="col" style="text-align: center;">Username</th>
                        <th scope="col" style="text-align: center;">Role</th>
                        <th scope="col" style="text-align: center;">Action</th>
                    </tr>
                </thead>
                <tbody id="tbody">
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>

    loadTable();

    function getAccessToken() {
        // Mengambil token akses dari local storage
        return localStorage.getItem('accessToken');
    }

    function loadTable() {
        var hostname = "https://localhost:44303/";
        var url = hostname + "GetAllPengguna";
        var method = "GET";

        // Ambil token akses dari tempat penyimpanan yang sesuai
        var accessToken = getAccessToken();

        $.ajax({
            url: url,
            method: method,
            headers: {
                'Authorization': 'Bearer ' + accessToken
            },
            contentType: "application/json",
            success: function (data) {
                var list = data.data;
                var rowNumber = 1;

                list.forEach(function (item) {
                    var newRow = '<tr>' +
                        '<td>' + rowNumber++ + '</td>' +
                        '<td>' + item.username + '</td>' +
                        '<td>' + item.role + '</td>' +
                        '<td>' +
                        '<a class="btn btn-sm btn-primary" href="/Pengguna/UbahAkun?id=' + item.id + '"><i class="fas fa-duotone fa-pen-to-square"></i></a>' +
                        '<span style="margin-right: 10px;"></span>' +
                        '<button class="btn btn-sm btn-danger" onclick="hapus(' + item.id + ')"><i class="fas fa-duotone fa-trash"></i></button>' +
                        '</td>' +
                        '</tr>';
                    $('#tbody').append(newRow);
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                console.error("Error fetching data:", errorThrown);
                // Handle error, misalnya tampilkan pesan ke pengguna atau log ke konsol
            }
        });
    }




    function hapus(id) {
        Swal.fire({
            title: 'Apakah Anda yakin?',
            text: 'Data akan dihapus secara permanen!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Ya, Hapus!',
            cancelButtonText: 'Batal'
        }).then((result) => {
            if (result.isConfirmed) {
                // Jika pengguna mengonfirmasi
                var hostname = "https://localhost:44303/";
                var url = hostname + "HapusPengguna?id=" + id;
                var method = "POST";

                // Ambil token akses dari tempat penyimpanan yang sesuai
                var accessToken = getAccessToken();

                $.ajax({
                    url: url,
                    method: method,
                    headers: {
                        'Authorization': 'Bearer ' + accessToken
                    },
                    contentType: "application/json",
                    success: function (data) {
                        Swal.fire({
                            title: 'Berhasil!',
                            text: 'Data berhasil dihapus.',
                            icon: 'success',
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error("Error deleting data:", errorThrown);
                        Swal.fire({
                            title: 'Error!',
                            text: 'Terjadi kesalahan saat menghapus data.',
                            icon: 'error',
                            showConfirmButton: false // Menyembunyikan tombol konfirmasi
                        });
                    }
                });
            }
        });
    }

    // Fungsi untuk mendapatkan token akses dari tempat penyimpanan yang sesuai
    function getAccessToken() {
        // Implementasikan cara untuk mendapatkan token akses (dari cookie, local storage, dll.)
        // Contoh:
        // return localStorage.getItem('accessToken');
    }
</script>
